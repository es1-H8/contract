name: Smart Contract CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Compile contracts
        run: npx hardhat compile

      - name: Run Hardhat Tests
        run: npx hardhat test

  security:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Install Solhint
        run: npm install -g solhint

      - name: Run Solhint linting
        run: |
          echo "=== SOLHINT SECURITY ANALYSIS ===" | tee security-report.txt
          echo "Tool: Solhint" | tee -a security-report.txt
          echo "Timestamp: $(date)" | tee -a security-report.txt
          echo "" | tee -a security-report.txt
          npx solhint "contracts/**/*.sol" --formatter=unix | tee -a security-report.txt

      - name: Install Slither
        run: |
          pip install slither-analyzer
          echo "" | tee -a security-report.txt
          echo "=== SLITHER SECURITY ANALYSIS ===" | tee -a security-report.txt
          echo "Tool: Slither" | tee -a security-report.txt
          echo "Timestamp: $(date)" | tee -a security-report.txt
          echo "" | tee -a security-report.txt
          slither . --print human-summary --print human | tee -a security-report.txt || echo "Slither analysis completed with findings above"
          
          # Verify Slither output and add debug info if needed
          if [ ! -s security-report.txt ] || ! grep -q "SLITHER SECURITY ANALYSIS" security-report.txt; then
            echo "Slither output verification:" | tee -a security-report.txt
            echo "Running Slither with debug info..." | tee -a security-report.txt
            slither . --print human-summary 2>&1 | tee -a security-report.txt || echo "Slither failed to run properly"
          fi

      - name: Upload full security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.txt

  deploy:
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Deploy to Sepolia Testnet
        env:
          INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        run: npx hardhat run scripts/deploy.js --network sepolia

      - name: Verify Contract on Etherscan
        env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        run: |
          # This will be updated with the actual deployed contract address
          echo "Contract verification step - update with actual address"
          # npx hardhat verify --network sepolia DEPLOYED_CONTRACT_ADDRESS 