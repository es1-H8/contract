name: smartbugs

on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install base deps
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y python3 python3-venv python3-pip jq tree

      # Add right after "Install base deps"
      - name: Check Docker
        run: |
          set -euxo pipefail
          docker --version
          docker info | sed -n '1,50p'

      # OPTIONAL: compile with Hardhat if present
      - name: Compile (Hardhat, if present)
        run: |
          set -euxo pipefail
          if [ -f package.json ] && grep -q '"hardhat"' package.json; then
            echo "Hardhat detected. Installing and compiling…"
            corepack enable || true
            npm ci
            npx hardhat compile --force || true
          else
            echo "No Hardhat found (skipping compile)."
          fi

      - name: Fetch & install SmartBugs (robust)
        run: |
          set -euxo pipefail
          git clone --depth 1 https://github.com/smartbugs/smartbugs
          cd smartbugs
          python3 -m venv .venv
          . .venv/bin/activate
          if [ -f pyproject.toml ]; then
            pip install .
          elif [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install smartbugs || pip install smartbugs-framework || true
          fi
          (smartbugs --version || ./smartbugs --version || true) || true

      # (Keep Detect Solidity files step as-is, but add a count)
      - name: Detect Solidity files
        id: detect
        run: |
          set -euxo pipefail
          echo "=== TOP-LEVEL TREE ==="; tree -a -L 2 || true
          SOL_LIST="$( (git ls-files '*.sol' || true) )"
          if [ -z "$SOL_LIST" ]; then
            SOL_LIST="$(find . -type f -name '*.sol' | sed 's|^\./||')"
          fi
          COUNT=$(printf "%s\n" "$SOL_LIST" | sed '/^$/d' | wc -l)
          echo "Found $COUNT Solidity files"
          echo "$SOL_LIST" | sed 's/^/ - /' || true
          if [ "$COUNT" -eq 0 ]; then
            echo "::error::No Solidity files found. Check repo paths (contracts/ or src/)."
            exit 1
          fi
          printf "%s\n" "$SOL_LIST" > sol_targets.txt

      # ✅ Use the SmartBugs CLI script instead of python -m
      - name: Run SmartBugs (Slither + Mythril + Semgrep)
        working-directory: smartbugs
        run: |
          set -euxo pipefail

          # Ensure the CLI script is executable
          chmod +x smartbugs

          mkdir -p ../sarif

          # Build explicit targets relative to smartbugs/
          TARGETS=$(sed 's|^|../|' ../sol_targets.txt | tr '\n' ' ')
          echo "TARGET COUNT: $(wc -w <<<"$TARGETS")"
          test -n "$TARGETS"

          # Run the SmartBugs CLI (Docker-based)
          ./smartbugs -t slither,mythril,semgrep -f ${TARGETS} --timeout 600 --sarif

          echo "=== Collect SARIF into ../sarif ==="
          find results -type f -name '*.sarif' -print -exec cp {} ../sarif/ \;

      # Make the dump step tolerant (do not fail if dirs are missing)
      - name: Dump SmartBugs results (logs + previews)
        run: |
          set -euxo pipefail
          if [ -d smartbugs/results ]; then
            echo "=== RESULTS TREE ==="
            tree -a -L 4 smartbugs/results || true

            echo "=== Look for common error clues in tool logs ==="
            GREP_PATTERNS='error|could not compile|solc|import.*not found|TypeError|ParserError|Timeout'
            find smartbugs/results -type f \( -name '*.log' -o -name '*.txt' -o -name '*.json' \) -print | while read -r f; do
              if (grep -Eqi "$GREP_PATTERNS" "$f"); then
                echo "---- POSSIBLE ISSUE IN: $f ----"
                sed -n '1,120p' "$f" || true
                echo
              fi
            done
          else
            echo "smartbugs/results does not exist (SmartBugs produced no outputs)."
          fi

          echo "=== Preview SARIF files ==="
          if ls sarif/*.sarif >/dev/null 2>&1; then
            ls -lh sarif
            for f in sarif/*.sarif; do
              echo "---- $f (head) ----"; head -n 40 "$f" || true
              echo "---- $f (jq counts) ----"; jq '.runs[0].results | length' "$f" || true
            done
          else
            echo "No SARIF files collected."
          fi

      - name: Upload SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif

      - name: Upload full SmartBugs outputs (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: smartbugs-results
          path: |
            smartbugs/results
            sarif
            sol_targets.txt
